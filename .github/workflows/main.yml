name: Salesforce-workflo
on:
  pull_request:
    branches:
    - 'development'
    - 'qa'
    - 'uat'
    - 'main'
    types: 
    - closed  

jobs:
  salesforce:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
  
  salesforce-deploy:
    needs: salesforce
    if: |
      (github.event_name == 'pull_request'   && github.event.pull_request.merged == true) &&
      ((contains(github.head_ref, 'feature') && github.base_ref == 'development') ||
      (github.head_ref == 'qa'  && github.base_ref == 'uat') ||
      (github.head_ref == 'uat'  && github.base_ref == 'main'))   
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 2
        
    
    - name: Auth sandbox
      run: |
        BRANCH=${GITHUB_REF#refs/heads/}
        echo "Current branch is $BRANCH"
        if [[ $BRANCH == development ]]; then
          echo $GITHUB_WORKSPACE
        elif [[ $BRANCH == main ]]; then
          echo $GITHUB_WORKSPACE
        fi
         
        cat $GITHUB_WORKSPACE/build.properties
        if [[ $BRANCH == development ]]; then
          sed -i 's|SFDC_POC_USERNAME|'"${{ secrets.SFDC_POCDEV_USERNAME }}"'/g' $GITHUB_WORKSPACE/build.properties
          sed -i 's|SFDC_POC_PASSWORD|'"${{ secrets.SFDC_POCDEV_PASSWORD }}"'/g' $GITHUB_WORKSPACE/build.properties
          sed -i 's|SFDC_POC_SERVERURL|'"${{ secrets.SFDC_POCDEV_SERVERURL }}"'/g' $GITHUB_WORKSPACE/build.properties
        elif [[ $BRANCH == main ]]; then
          sed -i 's|FDC_POC_PASSWORD|'"${{ secrets.SFDC_POCPROD_USERNAME }}"'/g' $GITHUB_WORKSPACE/build.properties
          sed -i 's|SFDC_POC_USERNAME|'"${{ secrets.SFDC_POCPROD_PASSWORD }}"'/g' $GITHUB_WORKSPACE/build.properties
          sed -i 's|SFDC_POC_SERVERURl|'"${{ secrets.SFDC_POCPROD_SERVERURL }}"'/g' $GITHUB_WORKSPACE/build.properties
        fi
        cat $GITHUB_WORKSPACE/build.properties
        export MANIFEST_FOLDER= jq '.MANIFEST_FOLDER' devops/params.json
        echo "Manifest folder: $MANIFEST_FOLDER"
        
             
        
    - name: SFDC_Pre_Deploy_Validation
      run: |
        echo "SFDC_Pre_Deploy_Validation"
        ant validateRETests -buildfile $GITHUB_WORKSPACE/build/$MANIFEST_FOLDER/build.xml   
        if [ $? != 0 ]  
        then
          echo "Validation failed"
        fi
    - name: SFDC_Deploy
      run: |
        echo "SFDC_Deploy"
        ant deploy $GITHUB_WORKSPACE/build/$MANIFEST_FOLDER/project-manifest-TPM.txt
        if [ $? == 0 ] 
        then
          echo "deployment failed"
        fi
